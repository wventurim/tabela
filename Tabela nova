<!DOCTYPE html>
<html lang="pt-BR">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>App Completo Google Sheets</title>
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: #f9fafb;
    margin: 0; padding: 0;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
  header {
    background: #0078d7;
    color: white;
    padding: 1rem 2rem;
    text-align: center;
    font-size: 1.6rem;
    font-weight: 700;
  }
  main {
    flex: 1;
    padding: 2rem;
    max-width: 1100px;
    margin: auto;
    width: 95%;
  }
  #search {
    width: 100%;
    padding: 0.6rem 1rem;
    font-size: 1rem;
    margin-bottom: 1.2rem;
    border-radius: 6px;
    border: 1px solid #ccc;
    box-sizing: border-box;
  }
  table {
    width: 100%;
    border-collapse: collapse;
    background: white;
    box-shadow: 0 2px 8px rgb(0 0 0 / 0.1);
    border-radius: 8px;
    overflow: hidden;
  }
  thead {
    background: #0078d7;
    color: white;
  }
  th, td {
    padding: 12px 15px;
    text-align: left;
    border-bottom: 1px solid #eee;
  }
  tbody tr:hover {
    background: #f1f9ff;
  }
  tfoot {
    background: #f4f6f8;
  }
  tfoot td {
    padding: 10px;
    text-align: center;
  }
  button {
    background: #0078d7;
    border: none;
    color: white;
    padding: 6px 12px;
    margin: 0 5px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: 600;
  }
  button:disabled {
    background: #a0a0a0;
    cursor: default;
  }
  @media (max-width: 700px) {
    table, thead, tbody, th, td, tr {
      display: block;
    }
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }
    tbody tr {
      margin-bottom: 1rem;
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 6px rgb(0 0 0 / 0.1);
      padding: 1rem;
    }
    tbody td {
      border: none;
      position: relative;
      padding-left: 50%;
      text-align: right;
    }
    tbody td::before {
      content: attr(data-label);
      position: absolute;
      left: 1rem;
      top: 1rem;
      font-weight: 700;
      color: #0078d7;
      text-transform: uppercase;
      font-size: 0.8rem;
    }
  }
  #loading {
    text-align: center;
    font-size: 1.2rem;
    color: #555;
  }
</style>
</head>
<body>

<header>Lista de Produtos do Google Sheets</header>

<main>
  <input type="search" id="search" placeholder="Buscar..." aria-label="Buscar dados" />
  <div id="loading">Carregando dados...</div>
  <table id="data-table" style="display:none;">
    <thead><tr></tr></thead>
    <tbody></tbody>
    <tfoot>
      <tr>
        <td colspan="100%">
          <button id="prevBtn" disabled>Anterior</button>
          <span id="pageInfo"></span>
          <button id="nextBtn" disabled>Próximo</button>
        </td>
      </tr>
    </tfoot>
  </table>
</main>

<script src="https://cdn.jsdelivr.net/npm/tabletop@1.6.0/tabletop.min.js"></script>
<script>
  const sheetID = e/2PACX-1vQnJ4pVIjEmb-CEUYFYkujOaDJXTmNSjx1JTJgDRlYS_ELDsR3JTTiTcYQ5Mjkj_4vskS8paaeeKH-P; // Substitua pelo ID da sua planilha

  const loadingEl = document.getElementById('loading');
  const table = document.getElementById('data-table');
  const thead = table.querySelector('thead tr');
  const tbody = table.querySelector('tbody');
  const searchInput = document.getElementById('search');
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');
  const pageInfo = document.getElementById('pageInfo');

  let data = [];
  let filteredData = [];
  let currentPage = 1;
  const rowsPerPage = 10;

  function renderTablePage(page) {
    tbody.innerHTML = '';

    const start = (page -1) * rowsPerPage;
    const end = start + rowsPerPage;
    const pageData = filteredData.slice(start, end);

    pageData.forEach(row => {
      const tr = document.createElement('tr');
      Object.keys(row).forEach(key => {
        const td = document.createElement('td');
        td.setAttribute('data-label', key.toUpperCase());
        td.textContent = row[key];
        tr.appendChild(td);
      });
      tbody.appendChild(tr);
    });

    pageInfo.textContent = `Página ${page} de ${Math.ceil(filteredData.length / rowsPerPage)}`;
    prevBtn.disabled = page === 1;
    nextBtn.disabled = page === Math.ceil(filteredData.length / rowsPerPage);
  }

  function renderTableHeaders(keys) {
    thead.innerHTML = '';
    keys.forEach(key => {
      const th = document.createElement('th');
      th.textContent = key.toUpperCase();
      thead.appendChild(th);
    });
  }

  function filterData(query) {
    query = query.toLowerCase().trim();
    if (!query) {
      filteredData = data;
    } else {
      filteredData = data.filter(row => {
        return Object.values(row).some(val => 
          String(val).toLowerCase().includes(query)
        );
      });
    }
    currentPage = 1;
    renderTablePage(currentPage);
  }

  function loadSheet() {
    Tabletop.init({
      key: sheetID,
      callback: (sheetsData) => {
        if (!sheetsData || sheetsData.length === 0) {
          loadingEl.textContent = 'Nenhum dado encontrado.';
          return;
        }
        data = sheetsData;
        filteredData = data;

        renderTableHeaders(Object.keys(data[0]));
        renderTablePage(currentPage);

        loadingEl.style.display = 'none';
        table.style.display = 'table';
      },
      simpleSheet: true
    });
  }

  searchInput.addEventListener('input', () => {
    filterData(searchInput.value);
  });

  prevBtn.addEventListener('click', () => {
    if (currentPage > 1) {
      currentPage--;
      renderTablePage(currentPage);
    }
  });

  nextBtn.addEventListener('click', () => {
    if (currentPage < Math.ceil(filteredData.length / rowsPerPage)) {
      currentPage++;
      renderTablePage(currentPage);
    }
  });

  window.onload = loadSheet;
</script>

</body>
</html>
